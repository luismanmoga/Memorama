//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Memorama.DataAccessService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JugadorSet", Namespace="http://schemas.datacontract.org/2004/07/DataAccess")]
    [System.SerializableAttribute()]
    public partial class JugadorSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContraseniaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Memorama.DataAccessService.PuntuacionSet[] PuntuacionSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contrasenia {
            get {
                return this.ContraseniaField;
            }
            set {
                if ((object.ReferenceEquals(this.ContraseniaField, value) != true)) {
                    this.ContraseniaField = value;
                    this.RaisePropertyChanged("Contrasenia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Correo {
            get {
                return this.CorreoField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoField, value) != true)) {
                    this.CorreoField = value;
                    this.RaisePropertyChanged("Correo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Memorama.DataAccessService.PuntuacionSet[] PuntuacionSet {
            get {
                return this.PuntuacionSetField;
            }
            set {
                if ((object.ReferenceEquals(this.PuntuacionSetField, value) != true)) {
                    this.PuntuacionSetField = value;
                    this.RaisePropertyChanged("PuntuacionSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PuntuacionSet", Namespace="http://schemas.datacontract.org/2004/07/DataAccess")]
    [System.SerializableAttribute()]
    public partial class PuntuacionSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Memorama.DataAccessService.JugadorSet JugadorSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Jugador_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PuntosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha {
            get {
                return this.FechaField;
            }
            set {
                if ((this.FechaField.Equals(value) != true)) {
                    this.FechaField = value;
                    this.RaisePropertyChanged("Fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Memorama.DataAccessService.JugadorSet JugadorSet {
            get {
                return this.JugadorSetField;
            }
            set {
                if ((object.ReferenceEquals(this.JugadorSetField, value) != true)) {
                    this.JugadorSetField = value;
                    this.RaisePropertyChanged("JugadorSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Jugador_Id {
            get {
                return this.Jugador_IdField;
            }
            set {
                if ((this.Jugador_IdField.Equals(value) != true)) {
                    this.Jugador_IdField = value;
                    this.RaisePropertyChanged("Jugador_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Puntos {
            get {
                return this.PuntosField;
            }
            set {
                if ((object.ReferenceEquals(this.PuntosField, value) != true)) {
                    this.PuntosField = value;
                    this.RaisePropertyChanged("Puntos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataAccessService.IDataAccessService")]
    public interface IDataAccessService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/RegistrarJugador", ReplyAction="http://tempuri.org/IDataAccessService/RegistrarJugadorResponse")]
        int RegistrarJugador(string usr, string correo, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/RegistrarJugador", ReplyAction="http://tempuri.org/IDataAccessService/RegistrarJugadorResponse")]
        System.Threading.Tasks.Task<int> RegistrarJugadorAsync(string usr, string correo, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetJugador", ReplyAction="http://tempuri.org/IDataAccessService/GetJugadorResponse")]
        Memorama.DataAccessService.JugadorSet GetJugador();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetJugador", ReplyAction="http://tempuri.org/IDataAccessService/GetJugadorResponse")]
        System.Threading.Tasks.Task<Memorama.DataAccessService.JugadorSet> GetJugadorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/autenticar", ReplyAction="http://tempuri.org/IDataAccessService/autenticarResponse")]
        bool autenticar(string correo, string contrasenia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/autenticar", ReplyAction="http://tempuri.org/IDataAccessService/autenticarResponse")]
        System.Threading.Tasks.Task<bool> autenticarAsync(string correo, string contrasenia);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataAccessServiceChannel : Memorama.DataAccessService.IDataAccessService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataAccessServiceClient : System.ServiceModel.ClientBase<Memorama.DataAccessService.IDataAccessService>, Memorama.DataAccessService.IDataAccessService {
        
        public DataAccessServiceClient() {
        }
        
        public DataAccessServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataAccessServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataAccessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataAccessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int RegistrarJugador(string usr, string correo, string pass) {
            return base.Channel.RegistrarJugador(usr, correo, pass);
        }
        
        public System.Threading.Tasks.Task<int> RegistrarJugadorAsync(string usr, string correo, string pass) {
            return base.Channel.RegistrarJugadorAsync(usr, correo, pass);
        }
        
        public Memorama.DataAccessService.JugadorSet GetJugador() {
            return base.Channel.GetJugador();
        }
        
        public System.Threading.Tasks.Task<Memorama.DataAccessService.JugadorSet> GetJugadorAsync() {
            return base.Channel.GetJugadorAsync();
        }
        
        public bool autenticar(string correo, string contrasenia) {
            return base.Channel.autenticar(correo, contrasenia);
        }
        
        public System.Threading.Tasks.Task<bool> autenticarAsync(string correo, string contrasenia) {
            return base.Channel.autenticarAsync(correo, contrasenia);
        }
    }
}
